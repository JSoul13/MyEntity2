<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entity: The Paranormal Evidence AI</title>
    <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            font-family: 'Courier New', monospace;
        }
        .horror-font {
            font-family: 'Creepster', 'Chiller', 'Nosifer', cursive;
            text-shadow: 0 0 10px #ff0080, 0 0 20px #ff0080, 0 0 30px #ff0080;
        }
        .neon-glow {
            box-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
        }
        #error-container {
            color: orange;
            font-size: 16px;
            margin: 12px;
            min-height: 120px;
            overflow-y: auto;
            border: 1px solid orange;
            padding: 10px;
            border-radius: 8px;
            background-color: #ff96000d;
            display: none;
        }
    </style>
</head>
<body>
    <div id="root"></div>
    <div id="error-container"></div>
    <script type="text/babel">
        function App() {
            const [currentView, setCurrentView] = React.useState('dashboard');
            const [uploadedFiles, setUploadedFiles] = React.useState([]);
            const [analysisResults, setAnalysisResults] = React.useState(null);
            const [isAnalyzing, setIsAnalyzing] = React.useState(false);
            const [selectedCase, setSelectedCase] = React.useState(null);
            const [showCollabModal, setShowCollabModal] = React.useState(false);
            const [selectedLocation, setSelectedLocation] = React.useState(null);

            // Mock data for demonstration
            const mockCases = [
                {
                    id: 1,
                    name: "Abandoned Hospital Investigation",
                    date: "2024-06-15",
                    location: "St. Mary's Hospital, Salem",
                    anomalies: 7,
                    evps: 3,
                    status: "analyzed",
                    collaborators: ["@GhostHunter92", "@ParanormalPro"],
                    isPublic: true
                },
                {
                    id: 2,
                    name: "Cemetery Midnight Session",
                    date: "2024-06-10",
                    location: "Greenlawn Cemetery",
                    anomalies: 12,
                    evps: 5,
                    status: "processing",
                    collaborators: ["@SpiritSeeker"],
                    isPublic: false
                }
            ];

            const mockHauntedLocations = [
                {
                    id: 1,
                    name: "Eastern State Penitentiary",
                    location: "Philadelphia, PA",
                    coordinates: { lat: 39.9686, lng: -75.1725 },
                    activityLevel: "high",
                    evidenceCount: 47,
                    investigators: 23,
                    lastActivity: "2 hours ago",
                    description: "Historic prison with intense paranormal activity",
                    recentEvidence: ["Shadow figure in Cell Block 12", "EVP: 'Get out'", "Temperature drop of 15°F"]
                },
                {
                    id: 2,
                    name: "Waverly Hills Sanatorium",
                    location: "Louisville, KY",
                    coordinates: { lat: 38.1347, lng: -85.9067 },
                    activityLevel: "extreme",
                    evidenceCount: 89,
                    investigators: 41,
                    lastActivity: "30 minutes ago",
                    description: "Former tuberculosis hospital, one of the most haunted places in America",
                    recentEvidence: ["Full body apparition in Room 502", "Multiple EVPs recorded", "Doors slamming shut"]
                },
                {
                    id: 3,
                    name: "Tower of London",
                    location: "London, UK",
                    coordinates: { lat: 51.5081, lng: -0.0759 },
                    activityLevel: "high",
                    evidenceCount: 34,
                    investigators: 18,
                    lastActivity: "1 day ago",
                    description: "Historic castle with centuries of paranormal reports",
                    recentEvidence: ["Anne Boleyn sighting", "Phantom footsteps", "Cold spots in Bloody Tower"]
                },
                {
                    id: 4,
                    name: "Poveglia Island",
                    location: "Venice, Italy",
                    coordinates: { lat: 45.3647, lng: 12.2967 },
                    activityLevel: "extreme",
                    evidenceCount: 67,
                    investigators: 29,
                    lastActivity: "5 hours ago",
                    description: "Former plague quarantine station with dark history",
                    recentEvidence: ["Screaming voices at night", "Ash falling from sky", "Phantom plague victims"]
                }
            ];

            const mockCommunityRequests = [
                {
                    id: 1,
                    title: "Help Analyze Victorian Mansion EVPs",
                    user: "@VictorianGhost",
                    location: "Savannah, GA",
                    urgency: "high",
                    reward: "Premium Credits"
                },
                {
                    id: 2,
                    title: "Shadow Figure Analysis Needed",
                    user: "@ShadowWatcher",
                    location: "Portland, OR",
                    urgency: "medium",
                    reward: "Community Points"
                }
            ];

            const mockAnalysis = {
                videoAnomalies: [
                    { timestamp: "00:02:34", type: "Shadow Movement", confidence: 87 },
                    { timestamp: "00:05:12", type: "Orb Detection", confidence: 92 },
                    { timestamp: "00:08:45", type: "Facial Pattern", confidence: 73 }
                ],
                audioAnomalies: [
                    { timestamp: "00:03:15", type: "EVP Detected", text: "Help me", confidence: 85 },
                    { timestamp: "00:06:22", type: "Whisper", text: "Unknown", confidence: 67 }
                ],
                contextualData: {
                    moonPhase: "Waning Gibbous (78%)",
                    weather: "Clear, 62°F, Low Humidity",
                    geomagneticActivity: "Moderate (Kp-index: 4)"
                }
            };

            const handleFileUpload = (event) => {
                const files = Array.from(event.target.files);
                setUploadedFiles(prev => [...prev, ...files]);
            };

            const startAnalysis = () => {
                setIsAnalyzing(true);
                setTimeout(() => {
                    setAnalysisResults(mockAnalysis);
                    setIsAnalyzing(false);
                }, 3000);
            };

            // Enhanced Ghost Logo Component with bigger ghost, white body, neon pink horns, neon yellow halo
            const EntityLogo = ({ size = "text-2xl" }) => (
                <div className="flex items-center space-x-3">
                    <div className="relative">
                        <svg width="60" height="60" viewBox="0 0 60 60" className="drop-shadow-lg">
                            {/* Neon Yellow Halo */}
                            <ellipse cx="30" cy="15" rx="25" ry="4" fill="none" stroke="#ffff00" strokeWidth="2" className="neon-glow" style={{filter: 'drop-shadow(0 0 8px #ffff00)'}} />

                            {/* Ghost body - bigger and white */}
                            <path d="M30 20 C20 20, 15 25, 15 35 L15 50 L20 45 L25 50 L30 45 L35 50 L40 45 L45 50 L45 35 C45 25, 40 20, 30 20 Z" fill="white" stroke="rgba(255,255,255,0.3)" strokeWidth="1"/>

                            {/* Neon Pink Devil horns */}
                            <path d="M22 18 L20 12 L24 15 Z" fill="#ff0080" className="neon-glow" style={{filter: 'drop-shadow(0 0 6px #ff0080)'}} />
                            <path d="M38 18 L40 12 L36 15 Z" fill="#ff0080" className="neon-glow" style={{filter: 'drop-shadow(0 0 6px #ff0080)'}} />

                            {/* Eyes */}
                            <circle cx="25" cy="30" r="3" fill="black" />
                            <circle cx="35" cy="30" r="3" fill="black" />

                            {/* Mouth */}
                            <ellipse cx="30" cy="38" rx="4" ry="6" fill="black" />
                        </svg>
                    </div>
                    <span className={`${size} font-bold horror-font text-white`}>
                        ENTITY
                    </span>
                </div>
            );

            const Navigation = () => (
                <nav className="bg-black bg-opacity-50 backdrop-blur-sm border-b border-purple-500 sticky top-0 z-50">
                    <div className="container mx-auto px-4 py-4 flex justify-between items-center">
                        <EntityLogo />
                        <div className="hidden md:block">
                            <span className="text-purple-300 text-sm">AI Paranormal Analysis</span>
                        </div>
                        <div className="flex space-x-2">
                            {['dashboard', 'upload', 'analysis', 'maps', 'community', 'cases', 'contact'].map(view => (
                                <button
                                    key={view}
                                    onClick={() => setCurrentView(view)}
                                    className={`px-4 py-2 rounded transition-all ${
                                        currentView === view
                                            ? 'bg-pink-500 text-white shadow-lg shadow-pink-500/50'
                                            : 'text-gray-300 hover:text-pink-400 hover:bg-gray-900'
                                    }`}
                                >
                                    {view.charAt(0).toUpperCase() + view.slice(1)}
                                </button>
                            ))}
                        </div>
                    </div>
                </nav>
            );

            const Dashboard = () => (
                <div className="space-y-8">
                    <div className="text-center py-12">
                        <h1 className="text-5xl font-bold mb-4 bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                            Welcome to the Entity Core
                        </h1>
                        <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                            Advanced AI-Powered Paranormal Evidence Analysis & Global Community Collaboration
                        </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                        <div className="bg-gradient-to-br from-purple-900 to-purple-800 p-6 rounded-lg border border-purple-500">
                            <div className="text-3xl mb-2">📊</div>
                            <h3 className="text-lg font-semibold mb-1">Total Cases</h3>
                            <p className="text-3xl font-bold text-purple-300">{mockCases.length}</p>
                        </div>
                        <div className="bg-gradient-to-br from-pink-900 to-pink-800 p-6 rounded-lg border border-pink-500">
                            <div className="text-3xl mb-2">🔍</div>
                            <h3 className="text-lg font-semibold mb-1">Anomalies Detected</h3>
                            <p className="text-3xl font-bold text-pink-300">19</p>
                        </div>
                        <div className="bg-gradient-to-br from-blue-900 to-blue-800 p-6 rounded-lg border border-blue-500">
                            <div className="text-3xl mb-2">🎵</div>
                            <h3 className="text-lg font-semibold mb-1">EVPs Captured</h3>
                            <p className="text-3xl font-bold text-blue-300">8</p>
                        </div>
                        <div className="bg-gradient-to-br from-green-900 to-green-800 p-6 rounded-lg border border-green-500">
                            <div className="text-3xl mb-2">🌍</div>
                            <h3 className="text-lg font-semibold mb-1">Global Locations</h3>
                            <p className="text-3xl font-bold text-green-300">{mockHauntedLocations.length}</p>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                            <h3 className="text-xl font-semibold mb-4 text-purple-300">Recent Investigations</h3>
                            <div className="space-y-4">
                                {mockCases.map(case_ => (
                                    <div key={case_.id} className="bg-gray-800 p-4 rounded border border-gray-600">
                                        <h4 className="font-semibold text-white">{case_.name}</h4>
                                        <p className="text-sm text-gray-400">{case_.location} • {case_.date}</p>
                                        <div className="flex flex-wrap gap-1 mt-2">
                                            {case_.collaborators.map(collab => (
                                                <span key={collab} className="bg-purple-600 text-xs px-2 py-1 rounded">
                                                    {collab}
                                                </span>
                                            ))}
                                        </div>
                                        <div className="flex justify-between items-center mt-3 text-sm">
                                            <span className="text-yellow-400">{case_.anomalies} anomalies</span>
                                            <span className="text-blue-400">{case_.evps} EVPs</span>
                                            <span className={`px-2 py-1 rounded text-xs ${case_.status === 'analyzed' ? 'bg-green-600' : 'bg-yellow-600'}`}>
                                                {case_.status}
                                            </span>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>

                        <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                            <h3 className="text-xl font-semibold mb-4 text-purple-300">Global Hotspots</h3>
                            <div className="space-y-4">
                                {mockHauntedLocations.slice(0, 3).map(location => (
                                    <div key={location.id} className="bg-gray-800 p-4 rounded border border-gray-600">
                                        <div className="flex justify-between items-start">
                                            <h4 className="font-semibold text-white">{location.name}</h4>
                                            <span className={`px-2 py-1 rounded text-xs ${
                                                location.activityLevel === 'extreme' ? 'bg-red-600' : 'bg-orange-600'
                                            }`}>
                                                {location.activityLevel}
                                            </span>
                                        </div>
                                        <p className="text-sm text-gray-400 mt-1">{location.location}</p>
                                        <div className="flex justify-between text-xs text-gray-500 mt-2">
                                            <span>{location.evidenceCount} evidence</span>
                                            <span>{location.investigators} investigators</span>
                                        </div>
                                    </div>
                                ))}
                            </div>
                            <button 
                                onClick={() => setCurrentView('maps')}
                                className="mt-4 w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded font-semibold transition-all"
                            >
                                View Global Map
                            </button>
                        </div>
                    </div>
                </div>
            );

            const MapsView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">🌍 Global Paranormal Map</h1>
                        <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                            Explore haunted locations worldwide, connect with local investigators, and share evidence from the most active paranormal hotspots.
                        </p>
                    </div>

                    {/* Mock Map Interface */}
                    <div className="bg-gray-900 bg-opacity-50 p-8 rounded-lg border border-gray-700 text-center">
                        <div className="text-6xl mb-4">🗺️</div>
                        <h3 className="text-2xl font-semibold mb-2">Interactive Paranormal Map</h3>
                        <p className="text-gray-400">Click on locations to view evidence and connect with investigators</p>

                        {/* Mock location markers */}
                        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-8">
                            <div className="bg-red-900 bg-opacity-50 p-4 rounded border border-red-500">
                                <div className="text-2xl font-bold text-red-300">237</div>
                                <div className="text-sm">Extreme Activity Locations</div>
                            </div>
                            <div className="bg-blue-900 bg-opacity-50 p-4 rounded border border-blue-500">
                                <div className="text-2xl font-bold text-blue-300">1,847</div>
                                <div className="text-sm">Evidence Submissions</div>
                            </div>
                            <div className="bg-green-900 bg-opacity-50 p-4 rounded border border-green-500">
                                <div className="text-2xl font-bold text-green-300">12,394</div>
                                <div className="text-sm">Global Investigators</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4 text-purple-300">🔥 Most Active Locations</h3>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {mockHauntedLocations.map(location => (
                                <div 
                                    key={location.id} 
                                    className="bg-gray-800 p-4 rounded border border-gray-600 cursor-pointer hover:border-purple-500 transition-all"
                                    onClick={() => setSelectedLocation(location)}
                                >
                                    <div className="flex justify-between items-start mb-2">
                                        <h4 className="font-semibold text-white">{location.name}</h4>
                                        <span className={`px-2 py-1 rounded text-xs ${
                                            location.activityLevel === 'extreme' ? 'bg-red-600' : 'bg-orange-600'
                                        }`}>
                                            {location.activityLevel}
                                        </span>
                                    </div>
                                    <p className="text-xs text-green-400 mb-2">{location.lastActivity}</p>
                                    <p className="text-sm text-gray-400 mb-2">{location.location}</p>
                                    <p className="text-sm text-gray-300 mb-3">{location.description}</p>
                                    <div className="flex justify-between text-xs text-gray-500">
                                        <span>{location.evidenceCount} evidence</span>
                                        <span>{location.investigators} investigators</span>
                                    </div>
                                    <button className="mt-2 w-full bg-purple-500 hover:bg-purple-600 text-white py-1 rounded text-sm transition-all">
                                        Join Investigation
                                    </button>
                                </div>
                            ))}
                        </div>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4 text-purple-300">📸 Recent Global Evidence</h3>
                        <div className="space-y-3">
                            {[
                                { user: "@TokyoGhostHunter", location: "Aokigahara Forest, Japan", evidence: "Shadow figure captured on thermal", time: "15 min ago", type: "video" },
                                { user: "@LondonSpirits", location: "Tower of London, UK", evidence: "EVP: 'The crown... my crown...'", time: "32 min ago", type: "audio" },
                                { user: "@SalemWitch", location: "Salem, MA", evidence: "Orb formation in cemetery", time: "1 hour ago", type: "photo" },
                                { user: "@RomanGhost", location: "Colosseum, Italy", evidence: "Gladiator apparition sighting", time: "2 hours ago", type: "video" }
                            ].map((evidence, index) => (
                                <div key={index} className="bg-gray-800 p-3 rounded border border-gray-600">
                                    <div className="flex justify-between items-start">
                                        <div className="flex items-center space-x-2">
                                            <span className="text-purple-400 font-semibold">{evidence.user}</span>
                                            <span className={`px-2 py-1 rounded text-xs ${
                                                evidence.type === 'video' ? 'bg-red-600' : 
                                                evidence.type === 'audio' ? 'bg-blue-600' : 'bg-green-600'
                                            }`}>
                                                {evidence.type}
                                            </span>
                                        </div>
                                        <span className="text-xs text-gray-500">{evidence.time}</span>
                                    </div>
                                    <p className="text-sm text-gray-400 mt-1">{evidence.location}</p>
                                    <p className="text-white mt-1">{evidence.evidence}</p>
                                </div>
                            ))}
                        </div>

                        <div className="mt-6 p-4 bg-purple-900 bg-opacity-30 rounded border border-purple-500">
                            <h4 className="font-semibold mb-2">📤 Submit Location Evidence</h4>
                            <p className="text-sm text-gray-400 mb-3">Share your evidence from any haunted location worldwide</p>
                            <button className="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition-all">
                                Upload Evidence to Map
                            </button>
                        </div>
                    </div>

                    {/* Location Detail Modal */}
                    {selectedLocation && (
                        <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
                            <div className="bg-gray-900 p-6 rounded-lg border border-purple-500 max-w-2xl w-full max-h-96 overflow-y-auto">
                                <div className="flex justify-between items-start mb-4">
                                    <h3 className="text-2xl font-bold text-white">{selectedLocation.name}</h3>
                                    <button 
                                        onClick={() => setSelectedLocation(null)}
                                        className="text-gray-400 hover:text-white text-2xl"
                                    >
                                        ×
                                    </button>
                                </div>
                                <div className="grid grid-cols-2 gap-4 mb-4">
                                    <div>
                                        <span className="text-gray-400">Location</span>
                                        <p className="text-white">{selectedLocation.location}</p>
                                    </div>
                                    <div>
                                        <span className="text-gray-400">Activity Level</span>
                                        <p className={`font-semibold ${selectedLocation.activityLevel === 'extreme' ? 'text-red-400' : 'text-orange-400'}`}>
                                            {selectedLocation.activityLevel}
                                        </p>
                                    </div>
                                </div>
                                <p className="text-gray-300 mb-4">{selectedLocation.description}</p>
                                <h4 className="font-semibold mb-2">Recent Evidence:</h4>
                                <ul className="space-y-1 mb-4">
                                    {selectedLocation.recentEvidence.map((evidence, index) => (
                                        <li key={index} className="text-gray-300">• {evidence}</li>
                                    ))}
                                </ul>
                                <div className="flex space-x-3">
                                    <button className="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition-all">
                                        Join Investigation Team
                                    </button>
                                    <button className="bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded transition-all">
                                        Share Evidence
                                    </button>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            );

            const CommunityView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">Community Collaboration Hub</h1>
                        <p className="text-xl text-gray-300 max-w-3xl mx-auto">
                            Connect with fellow investigators, share evidence, and work together to solve hauntings and help spirits find peace.
                        </p>
                    </div>

                    <div className="flex justify-center space-x-4">
                        <button 
                            onClick={() => setShowCollabModal(true)}
                            className="bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded-lg font-semibold transition-all shadow-lg shadow-purple-500/50"
                        >
                            Request Community Help
                        </button>
                        <button className="bg-pink-500 hover:bg-pink-600 text-white px-6 py-3 rounded-lg font-semibold transition-all shadow-lg shadow-pink-500/50">
                            Browse Active Cases
                        </button>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4 text-purple-300">🏆 Top Community Contributors</h3>
                        <div className="space-y-3">
                            {[
                                { name: "@SpiritWhisperer", points: 2450, solved: 12 },
                                { name: "@GhostDetective", points: 1890, solved: 8 },
                                { name: "@ParanormalPro", points: 1650, solved: 7 }
                            ].map((user, index) => (
                                <div key={index} className="bg-gray-800 p-4 rounded border border-gray-600 flex justify-between items-center">
                                    <div className="flex items-center space-x-3">
                                        <span className="text-2xl font-bold text-yellow-400">#{index + 1}</span>
                                        <div>
                                            <p className="font-semibold text-white">{user.name}</p>
                                            <p className="text-sm text-gray-400">{user.solved} spirits helped</p>
                                        </div>
                                    </div>
                                    <div className="text-right">
                                        <p className="text-lg font-bold text-purple-400">{user.points} pts</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4 text-purple-300">🔥 Active Collaborations</h3>
                        <div className="space-y-4">
                            {[
                                { title: "The Weeping Woman of Willow Creek", members: 4, progress: 75 },
                                { title: "Phantom Footsteps Investigation", members: 3, progress: 45 },
                                { title: "Victorian Mansion Mystery", members: 6, progress: 90 }
                            ].map((collab, index) => (
                                <div key={index} className="bg-gray-800 p-4 rounded border border-gray-600">
                                    <div className="flex justify-between items-start mb-2">
                                        <h4 className="font-semibold text-white">{collab.title}</h4>
                                        <span className="text-sm text-gray-400">{collab.members} members</span>
                                    </div>
                                    <div className="w-full bg-gray-700 rounded-full h-2">
                                        <div 
                                            className="bg-gradient-to-r from-purple-500 to-pink-500 h-2 rounded-full" 
                                            style={{width: `${collab.progress}%`}}
                                        ></div>
                                    </div>
                                    <p className="text-sm text-gray-400 mt-1">{collab.progress}% complete</p>
                                </div>
                            ))}
                        </div>
                    </div>

                    {showCollabModal && (
                        <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
                            <div className="bg-gray-900 p-6 rounded-lg border border-purple-500 max-w-md w-full">
                                <h3 className="text-xl font-bold mb-4">Request Community Help</h3>
                                <div className="space-y-4">
                                    <div>
                                        <label className="block text-sm font-medium mb-2">Case Title</label>
                                        <input type="text" className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white" />
                                    </div>
                                    <div>
                                        <label className="block text-sm font-medium mb-2">Description</label>
                                        <textarea className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white h-24"></textarea>
                                    </div>
                                    <div>
                                        <label className="block text-sm font-medium mb-2">Urgency Level</label>
                                        <select className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white">
                                            <option>Low - General assistance</option>
                                            <option>Medium - Need expert input</option>
                                            <option>High - Spirit in distress</option>
                                        </select>
                                    </div>
                                </div>
                                <div className="flex space-x-3 mt-6">
                                    <button 
                                        onClick={() => setShowCollabModal(false)}
                                        className="flex-1 bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded transition-all"
                                    >
                                        Cancel
                                    </button>
                                    <button className="flex-1 bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded transition-all">
                                        Submit Request
                                    </button>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            );

            const UploadView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">Evidence Upload</h1>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-8 rounded-lg border border-gray-700 text-center">
                        <div className="text-6xl mb-4">📁</div>
                        <h3 className="text-2xl font-semibold mb-4">Upload Your Evidence</h3>
                        <p className="text-gray-400 mb-6">Drag and drop video files or click to browse</p>

                        <input 
                            type="file" 
                            multiple 
                            accept="video/*,audio/*,image/*" 
                            onChange={handleFileUpload}
                            className="hidden" 
                            id="file-upload"
                        />
                        <label 
                            htmlFor="file-upload" 
                            className="bg-purple-500 hover:bg-purple-600 text-white px-8 py-3 rounded-lg font-semibold cursor-pointer transition-all inline-block"
                        >
                            Select Files
                        </label>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4">YouTube Import</h3>
                        <div className="flex space-x-3">
                            <input 
                                type="url" 
                                placeholder="Paste YouTube URL here..." 
                                className="flex-1 bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white"
                            />
                            <button className="bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded transition-all">
                                Import
                            </button>
                        </div>
                    </div>

                    <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-semibold mb-4">🤝 Collaboration Settings</h3>
                        <div className="space-y-3">
                            <label className="flex items-center space-x-3">
                                <input type="checkbox" className="form-checkbox text-purple-500" />
                                <span>Allow community collaboration on this evidence</span>
                            </label>
                            <label className="flex items-center space-x-3">
                                <input type="checkbox" className="form-checkbox text-purple-500" />
                                <span>Share with Entity AI research database (helps improve AI)</span>
                            </label>
                            <label className="flex items-center space-x-3">
                                <input type="checkbox" className="form-checkbox text-purple-500" />
                                <span>Add to global haunted locations map</span>
                            </label>
                            <label className="flex items-center space-x-3">
                                <input type="checkbox" className="form-checkbox text-purple-500" />
                                <span>Request expert investigator review</span>
                            </label>
                        </div>
                    </div>

                    {uploadedFiles.length > 0 && (
                        <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                            <h3 className="text-xl font-semibold mb-4">Uploaded Files</h3>
                            <div className="space-y-2">
                                {uploadedFiles.map((file, index) => (
                                    <div key={index} className="flex justify-between items-center bg-gray-800 p-3 rounded">
                                        <span className="text-white">{file.name}</span>
                                        <span className="text-gray-400">{(file.size / 1024 / 1024).toFixed(2)} MB</span>
                                    </div>
                                ))}
                            </div>
                            <button 
                                onClick={startAnalysis}
                                className="mt-4 w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white py-3 rounded-lg font-semibold transition-all"
                            >
                                Start AI Analysis
                            </button>
                        </div>
                    )}
                </div>
            );

            const AnalysisView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">Entity Core Analysis</h1>
                    </div>

                    {isAnalyzing && (
                        <div className="bg-gray-900 bg-opacity-50 p-8 rounded-lg border border-gray-700 text-center">
                            <div className="text-6xl mb-4">🔮</div>
                            <h3 className="text-2xl font-semibold mb-4">Analyzing Evidence...</h3>
                            <p className="text-gray-400">The Entity is scanning for paranormal activity</p>
                            <div className="mt-4 w-full bg-gray-700 rounded-full h-2">
                                <div className="bg-gradient-to-r from-purple-500 to-pink-500 h-2 rounded-full animate-pulse" style={{width: '60%'}}></div>
                            </div>
                        </div>
                    )}

                    {analysisResults && (
                        <div className="space-y-6">
                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4 text-purple-300">🎥 Video Anomalies</h3>
                                <div className="space-y-3">
                                    {analysisResults.videoAnomalies.map((anomaly, index) => (
                                        <div key={index} className="bg-gray-800 p-4 rounded border border-gray-600">
                                            <div className="flex justify-between items-center">
                                                <div>
                                                    <h4 className="font-semibold text-white">{anomaly.type}</h4>
                                                    <p className="text-sm text-gray-400">at {anomaly.timestamp}</p>
                                                </div>
                                                <div className="text-right">
                                                    <p className="text-lg font-bold text-white">{anomaly.confidence}%</p>
                                                    <div className={`w-16 h-2 rounded-full ${
                                                        anomaly.confidence > 80 ? 'bg-red-500' :
                                                        anomaly.confidence > 60 ? 'bg-yellow-500' : 'bg-green-500'
                                                    }`}></div>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </div>

                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4 text-purple-300">🎵 Audio Analysis (EVP)</h3>
                                <div className="space-y-3">
                                    {analysisResults.audioAnomalies.map((anomaly, index) => (
                                        <div key={index} className="bg-gray-800 p-4 rounded border border-gray-600">
                                            <div className="flex justify-between items-center">
                                                <div>
                                                    <h4 className="font-semibold text-white">"{anomaly.text}"</h4>
                                                    <p className="text-sm text-gray-400">at {anomaly.timestamp}</p>
                                                </div>
                                                <div className="flex items-center space-x-3">
                                                    <span className="text-lg font-bold text-white">{anomaly.confidence}%</span>
                                                    <button className="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-sm transition-all">
                                                        Play
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </div>

                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4 text-purple-300">🌙 Atmosphere Matrix</h3>
                                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                                    <div className="bg-gray-800 p-4 rounded">
                                        <h4 className="font-semibold text-white">Moon Phase</h4>
                                        <p className="text-gray-300">{analysisResults.contextualData.moonPhase}</p>
                                    </div>
                                    <div className="bg-gray-800 p-4 rounded">
                                        <h4 className="font-semibold text-white">Weather</h4>
                                        <p className="text-gray-300">{analysisResults.contextualData.weather}</p>
                                    </div>
                                    <div className="bg-gray-800 p-4 rounded">
                                        <h4 className="font-semibold text-white">Geomagnetic</h4>
                                        <p className="text-gray-300">{analysisResults.contextualData.geomagneticActivity}</p>
                                    </div>
                                </div>
                            </div>

                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4 text-purple-300">👥 Community Insights</h3>
                                <p className="text-gray-300 mb-4">
                                    Share this analysis with the community to get additional perspectives and help identify the spirit's needs.
                                </p>
                                <div className="flex space-x-3">
                                    <button className="bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition-all">
                                        Share with Community
                                    </button>
                                    <button className="bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded transition-all">
                                        Request Expert Review
                                    </button>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            );

            const CasesView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">Case Files</h1>
                    </div>

                    <div className="space-y-6">
                        {mockCases.map(case_ => (
                            <div key={case_.id} className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <div className="flex justify-between items-start mb-4">
                                    <h3 className="text-2xl font-semibold text-white">{case_.name}</h3>
                                    <div className="flex space-x-2">
                                        {case_.isPublic && (
                                            <span className="bg-green-600 text-white px-2 py-1 rounded text-xs">
                                                Public
                                            </span>
                                        )}
                                        <span className={`px-2 py-1 rounded text-xs ${
                                            case_.status === 'analyzed' ? 'bg-green-600' : 'bg-yellow-600'
                                        }`}>
                                            {case_.status}
                                        </span>
                                    </div>
                                </div>

                                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                                    <div>
                                        <span className="text-gray-400">Date</span>
                                        <p className="text-white">{case_.date}</p>
                                    </div>
                                    <div>
                                        <span className="text-gray-400">Location</span>
                                        <p className="text-white">{case_.location}</p>
                                    </div>
                                    <div>
                                        <span className="text-gray-400">Anomalies</span>
                                        <p className="text-white">{case_.anomalies}</p>
                                    </div>
                                    <div>
                                        <span className="text-gray-400">EVPs</span>
                                        <p className="text-white">{case_.evps}</p>
                                    </div>
                                </div>

                                <div className="mb-4">
                                    <span className="text-gray-400">Collaborators:</span>
                                    <div className="flex flex-wrap gap-2 mt-1">
                                        {case_.collaborators.map(collab => (
                                            <span key={collab} className="bg-purple-600 text-white px-2 py-1 rounded text-sm">
                                                {collab}
                                            </span>
                                        ))}
                                    </div>
                                </div>

                                <button className="bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded transition-all">
                                    View Details
                                </button>
                            </div>
                        ))}
                    </div>
                </div>
            );

            const ContactView = () => (
                <div className="space-y-8">
                    <div className="text-center">
                        <h1 className="text-4xl font-bold mb-4 text-purple-300">Contact & Support</h1>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                            <h3 className="text-xl font-semibold mb-4">📧 General Inquiries</h3>
                            <div className="space-y-4">
                                <input type="text" placeholder="Your Name" className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white" />
                                <input type="email" placeholder="Your Email" className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white" />
                                <textarea placeholder="Your Message" className="w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white h-32"></textarea>
                                <button className="w-full bg-purple-500 hover:bg-purple-600 text-white py-2 rounded transition-all">
                                    Send Message
                                </button>
                            </div>
                        </div>

                        <div className="space-y-6">
                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4">🛠️ Technical Support</h3>
                                <p className="text-gray-300 mb-4">Need help with the app? Our technical team is here to assist.</p>
                                <button className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded transition-all">
                                    Get Support
                                </button>
                            </div>

                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4">👻 Evidence Submission</h3>
                                <p className="text-gray-300 mb-4">Have compelling evidence? Submit it for our expert review.</p>
                                <button className="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded transition-all">
                                    Submit Evidence
                                </button>
                            </div>

                            <div className="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                                <h3 className="text-xl font-semibold mb-4">📱 Follow Us</h3>
                                <div className="flex space-x-4">
                                    <button className="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded transition-all">
                                        YouTube
                                    </button>
                                    <button className="bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded transition-all">
                                        Instagram
                                    </button>
                                    <button className="bg-black hover:bg-gray-800 text-white px-4 py-2 rounded transition-all">
                                        TikTok
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            );

            const renderCurrentView = () => {
                switch(currentView) {
                    case 'dashboard': return <Dashboard />;
                    case 'upload': return <UploadView />;
                    case 'analysis': return <AnalysisView />;
                    case 'maps': return <MapsView />;
                    case 'community': return <CommunityView />;
                    case 'cases': return <CasesView />;
                    case 'contact': return <ContactView />;
                    default: return <Dashboard />;
                }
            };

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entity AI Video Analysis Demo</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: #000000;
            font-family: 'Courier New', monospace;
        }
        .horror-font {
            font-family: 'Creepster', 'Chiller', 'Nosifer', cursive;
            text-shadow: 0 0 10px #ff0080, 0 0 20px #ff0080, 0 0 30px #ff0080;
        }
        .neon-glow {
            box-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
        }
        .analysis-step {
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.8s ease;
        }
        .analysis-step.active {
            opacity: 1;
            transform: translateY(0);
        }
        .progress-bar {
            width: 0%;
            transition: width 0.5s ease;
        }
        .video-frame {
            background: linear-gradient(45deg, #1a1a1a, #2a2a2a);
            border: 2px solid #333;
            position: relative;
            overflow: hidden;
        }
        .detection-box {
            position: absolute;
            border: 2px solid #ff0080;
            background: rgba(255, 0, 128, 0.1);
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 0.5; }
            50% { opacity: 1; }
        }
        .waveform {
            height: 60px;
            background: linear-gradient(90deg, #333, #555, #333);
            position: relative;
            overflow: hidden;
        }
        .waveform::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, #ff0080, transparent);
            animation: scan 3s infinite;
        }
        @keyframes scan {
            0% { left: -100%; }
            100% { left: 100%; }
        }
        .confidence-meter {
            background: linear-gradient(90deg, #ff4444, #ffaa00, #44ff44);
            height: 8px;
            border-radius: 4px;
        }
        .anomaly-indicator {
            animation: blink 1s infinite;
        }
        @keyframes blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0.3; }
        }
    </style>
</head>
<body class="text-white">
    <div class="min-h-screen bg-black">
        <!-- Header -->
        <header class="bg-gray-900 border-b border-purple-500 p-4">
            <div class="container mx-auto flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <div class="relative">
                        <svg width="50" height="50" viewBox="0 0 60 60" class="drop-shadow-lg">
                            <ellipse cx="30" cy="15" rx="25" ry="4" fill="none" stroke="#ffff00" stroke-width="2" class="neon-glow" style="filter: drop-shadow(0 0 8px #ffff00)" />
                            <path d="M30 20 C20 20, 15 25, 15 35 L15 50 L20 45 L25 50 L30 45 L35 50 L40 45 L45 50 L45 35 C45 25, 40 20, 30 20 Z" fill="white" stroke="rgba(255,255,255,0.3)" stroke-width="1"/>
                            <path d="M22 18 L20 12 L24 15 Z" fill="#ff0080" class="neon-glow" style="filter: drop-shadow(0 0 6px #ff0080)" />
                            <path d="M38 18 L40 12 L36 15 Z" fill="#ff0080" class="neon-glow" style="filter: drop-shadow(0 0 6px #ff0080)" />
                            <circle cx="25" cy="30" r="3" fill="black" />
                            <circle cx="35" cy="30" r="3" fill="black" />
                            <ellipse cx="30" cy="38" rx="4" ry="6" fill="black" />
                        </svg>
                    </div>
                    <h1 class="text-2xl font-bold horror-font">ENTITY AI ANALYZER</h1>
                </div>
                <div class="text-purple-300 text-sm">Live Analysis Demo</div>
            </div>
        </header>

        <div class="container mx-auto p-6">
            <!-- Demo Controls -->
            <div class="text-center mb-8">
                <h2 class="text-4xl font-bold mb-4 bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                    Video Evidence Analysis Demo
                </h2>
                <p class="text-gray-300 mb-6">Watch how Entity AI processes paranormal evidence in real-time</p>
                <button id="startDemo" class="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white px-8 py-3 rounded-lg font-semibold transition-all shadow-lg">
                    <i class="fas fa-play mr-2"></i>Start Analysis Demo
                </button>
                <button id="resetDemo" class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-semibold transition-all ml-4" style="display: none;">
                    <i class="fas fa-redo mr-2"></i>Reset Demo
                </button>
            </div>

            <!-- Analysis Progress -->
            <div id="progressSection" class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700 mb-8" style="display: none;">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-semibold text-purple-300">Analysis Progress</h3>
                    <span id="progressText" class="text-gray-400">Initializing...</span>
                </div>
                <div class="w-full bg-gray-700 rounded-full h-3">
                    <div id="progressBar" class="progress-bar bg-gradient-to-r from-purple-500 to-pink-500 h-3 rounded-full"></div>
                </div>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Video Analysis Panel -->
                <div class="space-y-6">
                    <!-- Mock Video Frame -->
                    <div class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 class="text-xl font-semibold mb-4 text-purple-300">
                            <i class="fas fa-video mr-2"></i>Video Analysis
                        </h3>
                        <div class="video-frame aspect-video rounded-lg mb-4 flex items-center justify-center relative">
                            <div class="text-gray-500 text-center">
                                <i class="fas fa-video text-4xl mb-2"></i>
                                <p>Haunted_Hospital_Investigation.mp4</p>
                                <p class="text-sm">Duration: 12:34 | Resolution: 1920x1080</p>
                            </div>
                            <!-- Detection boxes will be added dynamically -->
                        </div>
                        <div class="text-sm text-gray-400 mb-2">Timeline: <span id="currentTime">00:00</span> / 12:34</div>
                        <div class="w-full bg-gray-700 rounded-full h-2">
                            <div id="videoProgress" class="bg-red-500 h-2 rounded-full" style="width: 0%"></div>
                        </div>
                    </div>

                    <!-- Audio Analysis -->
                    <div class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 class="text-xl font-semibold mb-4 text-purple-300">
                            <i class="fas fa-microphone mr-2"></i>Audio Analysis (EVP Detection)
                        </h3>
                        <div class="waveform rounded mb-4"></div>
                        <div class="text-sm text-gray-400">
                            <div>Frequency Range: 20Hz - 20kHz</div>
                            <div>Noise Reduction: Active</div>
                            <div>EVP Sensitivity: High</div>
                        </div>
                    </div>
                </div>

                <!-- Analysis Results Panel -->
                <div class="space-y-6">
                    <!-- Real-time Detections -->
                    <div class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 class="text-xl font-semibold mb-4 text-purple-300">
                            <i class="fas fa-search mr-2"></i>Real-time Detections
                        </h3>
                        <div id="detectionsList" class="space-y-3 max-h-64 overflow-y-auto">
                            <!-- Detections will be added here -->
                        </div>
                    </div>

                    <!-- Analysis Steps -->
                    <div class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                        <h3 class="text-xl font-semibold mb-4 text-purple-300">
                            <i class="fas fa-cogs mr-2"></i>Analysis Pipeline
                        </h3>
                        <div class="space-y-4">
                            <div class="analysis-step" data-step="1">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">1</div>
                                    <div>
                                        <div class="font-semibold">Frame Extraction</div>
                                        <div class="text-sm text-gray-400">Extracting frames for analysis</div>
                                    </div>
                                </div>
                            </div>
                            <div class="analysis-step" data-step="2">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">2</div>
                                    <div>
                                        <div class="font-semibold">Motion Detection</div>
                                        <div class="text-sm text-gray-400">Analyzing movement patterns</div>
                                    </div>
                                </div>
                            </div>
                            <div class="analysis-step" data-step="3">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">3</div>
                                    <div>
                                        <div class="font-semibold">Shadow Analysis</div>
                                        <div class="text-sm text-gray-400">Detecting anomalous shadows</div>
                                    </div>
                                </div>
                            </div>
                            <div class="analysis-step" data-step="4">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">4</div>
                                    <div>
                                        <div class="font-semibold">Orb Detection</div>
                                        <div class="text-sm text-gray-400">Identifying light anomalies</div>
                                    </div>
                                </div>
                            </div>
                            <div class="analysis-step" data-step="5">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">5</div>
                                    <div>
                                        <div class="font-semibold">Audio Processing</div>
                                        <div class="text-sm text-gray-400">EVP extraction and enhancement</div>
                                    </div>
                                </div>
                            </div>
                            <div class="analysis-step" data-step="6">
                                <div class="flex items-center space-x-3">
                                    <div class="w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center">6</div>
                                    <div>
                                        <div class="font-semibold">Pattern Recognition</div>
                                        <div class="text-sm text-gray-400">Identifying paranormal signatures</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Final Results -->
            <div id="finalResults" class="mt-8 space-y-6" style="display: none;">
                <div class="text-center">
                    <h2 class="text-3xl font-bold mb-4 text-green-400">Analysis Complete!</h2>
                    <p class="text-gray-300">Entity AI has processed your evidence and found the following anomalies:</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="bg-red-900 bg-opacity-50 p-6 rounded-lg border border-red-500">
                        <div class="text-center">
                            <div class="text-3xl mb-2">👻</div>
                            <h3 class="text-xl font-semibold mb-2">Shadow Entities</h3>
                            <div class="text-3xl font-bold text-red-300">3</div>
                            <p class="text-sm text-gray-400 mt-2">Detected at timestamps: 02:34, 05:12, 08:45</p>
                        </div>
                    </div>
                    <div class="bg-blue-900 bg-opacity-50 p-6 rounded-lg border border-blue-500">
                        <div class="text-center">
                            <div class="text-3xl mb-2">🎵</div>
                            <h3 class="text-xl font-semibold mb-2">EVP Recordings</h3>
                            <div class="text-3xl font-bold text-blue-300">2</div>
                            <p class="text-sm text-gray-400 mt-2">"Help me" and "Get out" detected</p>
                        </div>
                    </div>
                    <div class="bg-yellow-900 bg-opacity-50 p-6 rounded-lg border border-yellow-500">
                        <div class="text-center">
                            <div class="text-3xl mb-2">💫</div>
                            <h3 class="text-xl font-semibold mb-2">Light Orbs</h3>
                            <div class="text-3xl font-bold text-yellow-300">7</div>
                            <p class="text-sm text-gray-400 mt-2">Various sizes and intensities</p>
                        </div>
                    </div>
                </div>

                <div class="bg-gray-900 bg-opacity-50 p-6 rounded-lg border border-gray-700">
                    <h3 class="text-xl font-semibold mb-4 text-purple-300">Detailed Analysis Report</h3>
                    <div class="space-y-4">
                        <div class="bg-gray-800 p-4 rounded">
                            <div class="flex justify-between items-center mb-2">
                                <h4 class="font-semibold">Shadow Movement - 02:34</h4>
                                <div class="flex items-center space-x-2">
                                    <span class="text-sm">Confidence:</span>
                                    <div class="w-20 bg-gray-700 rounded-full h-2">
                                        <div class="confidence-meter w-4/5 h-2 rounded-full"></div>
                                    </div>
                                    <span class="text-sm font-bold">87%</span>
                                </div>
                            </div>
                            <p class="text-sm text-gray-400">Humanoid shadow detected moving against light source direction. No corresponding physical object identified.</p>
                        </div>
                        <div class="bg-gray-800 p-4 rounded">
                            <div class="flex justify-between items-center mb-2">
                                <h4 class="font-semibold">EVP Detection - 03:15</h4>
                                <div class="flex items-center space-x-2">
                                    <span class="text-sm">Confidence:</span>
                                    <div class="w-20 bg-gray-700 rounded-full h-2">
                                        <div class="confidence-meter w-4/5 h-2 rounded-full"></div>
                                    </div>
                                    <span class="text-sm font-bold">85%</span>
                                </div>
                            </div>
                            <p class="text-sm text-gray-400">Clear female voice saying "Help me" detected in frequency range not present in ambient audio.</p>
                        </div>
                        <div class="bg-gray-800 p-4 rounded">
                            <div class="flex justify-between items-center mb-2">
                                <h4 class="font-semibold">Orb Manifestation - 05:12</h4>
                                <div class="flex items-center space-x-2">
                                    <span class="text-sm">Confidence:</span>
                                    <div class="w-20 bg-gray-700 rounded-full h-2">
                                        <div class="confidence-meter w-full h-2 rounded-full"></div>
                                    </div>
                                    <span class="text-sm font-bold">92%</span>
                                </div>
                            </div>
                            <p class="text-sm text-gray-400">Bright orb with intelligent movement pattern. Rules out dust, insects, or camera artifacts.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let demoRunning = false;
        let currentStep = 0;
        let detectionCount = 0;

        const detections = [
            { time: "02:34", type: "Shadow Movement", confidence: 87, description: "Humanoid shadow detected" },
            { time: "03:15", type: "EVP", confidence: 85, description: "Female voice: 'Help me'" },
            { time: "05:12", type: "Orb", confidence: 92, description: "Bright orb with intelligent movement" },
            { time: "06:22", type: "Temperature Drop", confidence: 73, description: "15°F temperature anomaly" },
            { time: "08:45", type: "Shadow Entity", confidence: 89, description: "Full body shadow figure" },
            { time: "09:30", type: "EVP", confidence: 67, description: "Whisper: 'Get out'" },
            { time: "11:15", type: "Orb Cluster", confidence: 94, description: "Multiple orbs in formation" }
        ];

        document.getElementById('startDemo').addEventListener('click', startDemo);
        document.getElementById('resetDemo').addEventListener('click', resetDemo);

        function startDemo() {
            if (demoRunning) return;
            
            demoRunning = true;
            document.getElementById('startDemo').style.display = 'none';
            document.getElementById('resetDemo').style.display = 'inline-block';
            document.getElementById('progressSection').style.display = 'block';
            
            runAnalysisDemo();
        }

        function resetDemo() {
            demoRunning = false;
            currentStep = 0;
            detectionCount = 0;
            
            document.getElementById('startDemo').style.display = 'inline-block';
            document.getElementById('resetDemo').style.display = 'none';
            document.getElementById('progressSection').style.display = 'none';
            document.getElementById('finalResults').style.display = 'none';
            
            // Reset progress bars
            document.getElementById('progressBar').style.width = '0%';
            document.getElementById('videoProgress').style.width = '0%';
            document.getElementById('currentTime').textContent = '00:00';
            document.getElementById('progressText').textContent = 'Initializing...';
            
            // Reset analysis steps
            document.querySelectorAll('.analysis-step').forEach(step => {
                step.classList.remove('active');
            });
            
            // Clear detections
            document.getElementById('detectionsList').innerHTML = '';
            
            // Remove detection boxes
            document.querySelectorAll('.detection-box').forEach(box => box.remove());
        }

        async function runAnalysisDemo() {
            const steps = [
                { text: "Initializing AI models...", progress: 10 },
                { text: "Extracting video frames...", progress: 20 },
                { text: "Analyzing motion patterns...", progress: 35 },
                { text: "Detecting shadow anomalies...", progress: 50 },
                { text: "Scanning for orbs and light anomalies...", progress: 65 },
                { text: "Processing audio for EVPs...", progress: 80 },
                { text: "Running pattern recognition...", progress: 95 },
                { text: "Generating final report...", progress: 100 }
            ];

            for (let i = 0; i < steps.length; i++) {
                if (!demoRunning) return;
                
                document.getElementById('progressText').textContent = steps[i].text;
                document.getElementById('progressBar').style.width = steps[i].progress + '%';
                
                // Activate analysis step
                if (i < 6) {
                    document.querySelector(`[data-step="${i + 1}"]`).classList.add('active');
                }
                
                // Simulate video progress
                const videoProgress = Math.min((i + 1) * 12.5, 100);
                document.getElementById('videoProgress').style.width = videoProgress + '%';
                
                // Update time
                const minutes = Math.floor((videoProgress / 100) * 12);
                const seconds = Math.floor(((videoProgress / 100) * 12 * 60) % 60);
                document.getElementById('currentTime').textContent = 
                    `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                // Add detections during analysis
                if (i >= 2 && detectionCount < detections.length) {
                    addDetection(detections[detectionCount]);
                    detectionCount++;
                    
                    // Add visual detection box
                    if (detections[detectionCount - 1].type.includes('Shadow') || 
                        detections[detectionCount - 1].type.includes('Orb')) {
                        addDetectionBox();
                    }
                }
                
                await sleep(1500);
            }
            
            // Show final results
            setTimeout(() => {
                if (demoRunning) {
                    document.getElementById('finalResults').style.display = 'block';
                    document.getElementById('finalResults').scrollIntoView({ behavior: 'smooth' });
                }
            }, 1000);
        }

        function addDetection(detection) {
            const detectionsList = document.getElementById('detectionsList');
            const detectionElement = document.createElement('div');
            detectionElement.className = 'bg-gray-800 p-3 rounded border border-gray-600 anomaly-indicator';
            
            const confidenceColor = detection.confidence > 80 ? 'text-red-400' : 
                                   detection.confidence > 60 ? 'text-yellow-400' : 'text-green-400';
            
            detectionElement.innerHTML = `
                <div class="flex justify-between items-start">
                    <div>
                        <h4 class="font-semibold text-white">${detection.type}</h4>
                        <p class="text-sm text-gray-400">at ${detection.time}</p>
                        <p class="text-sm text-gray-300 mt-1">${detection.description}</p>
                    </div>
                    <div class="text-right">
                        <span class="text-lg font-bold ${confidenceColor}">${detection.confidence}%</span>
                    </div>
                </div>
            `;
            
            detectionsList.appendChild(detectionElement);
            detectionsList.scrollTop = detectionsList.scrollHeight;
        }

        function addDetectionBox() {
            const videoFrame = document.querySelector('.video-frame');
            const detectionBox = document.createElement('div');
            detectionBox.className = 'detection-box';
            
            // Random position and size
            const left = Math.random() * 60 + 10; // 10-70%
            const top = Math.random() * 60 + 10;  // 10-70%
            const width = Math.random() * 20 + 15; // 15-35%
            const height = Math.random() * 20 + 15; // 15-35%
            
            detectionBox.style.left = left + '%';
            detectionBox.style.top = top + '%';
            detectionBox.style.width = width + '%';
            detectionBox.style.height = height + '%';
            
            videoFrame.appendChild(detectionBox);
            
            // Remove after 3 seconds
            setTimeout(() => {
                if (detectionBox.parentNode) {
                    detectionBox.remove();
                }
            }, 3000);
        }

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
    </script>
</body>
</html>
            return (
                <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-black text-white">
                    <Navigation />
                    <main className="container mx-auto px-4 py-8">
                        {renderCurrentView()}
                    </main>

                    {/* Subscription Banner */}
                    <div className="fixed bottom-4 right-4 bg-gradient-to-r from-purple-600 to-pink-600 p-4 rounded-lg shadow-lg max-w-sm">
                        <h3 className="font-bold text-sm">Upgrade to Entity Pro</h3>
                        <p className="text-xs opacity-90">Unlimited analysis • Global map access • Community collaboration • Expert reviews • Help free spirits worldwide</p>
                        <button className="mt-2 bg-white text-purple-600 px-3 py-1 rounded text-xs font-semibold hover:bg-gray-100 transition-all">
                            Subscribe Now
                        </button>
                    </div>
                </div>
            );
        }

        try {
            ReactDOM.render(<App />, document.getElementById('root'));
        } catch(error) {
            displayError('An error occurred while loading the application.');
        }

        window.addEventListener('error', function(event) {
            displayError(event.message, event.error?.stack);
        });

        function displayError(message, stackInfo) {
            const errorContainer = document.getElementById('error-container');
            const errorMessage = document.createElement('div');
            errorMessage.textContent = message;
            errorContainer.appendChild(errorMessage);
            if(stackInfo) {
                const stackErrorMessage = document.createElement('pre');
                stackErrorMessage.textContent = stackInfo.substring(0, 130);
                errorContainer.appendChild(stackErrorMessage);
            }
            errorContainer.style.display = 'block';
        }
    </script>
</body>
</html>
